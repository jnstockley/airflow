---
x-airflow-common: &airflow-common
  build: .
  env_file:
    - .env
  environment: &airflow-common-env
    AIRFLOW__API__BASE_URL: http://localhost:8080/
    TZ: America/Chicago
    AIRFLOW__CORE__DEFAULT_TIMEZONE: America/Chicago
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: America/Chicago
    AIRFLOW__CORE__EXECUTION_API_SERVER_URL: http://airflow-apiserver:8080/execution/
    AIRFLOW_VAR_ENV: dev
    REDIS_URI: redis://redis:6379/0
    AUTHENTIK_APP_NANE: airflow-dev
    AIRFLOW__CORE__AUTH_MANAGER: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager
    AIRFLOW__LOG_RETENTION_DAYS: 7
    AIRFLOW__FAB__EXPOSE_HOSTNAME: true
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./config:/opt/airflow/config
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
  depends_on: &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

name: airflow
services:
  airflow-apiserver:
    container_name: airflow-api-server
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    ports:
      - '8080:8080'
    command: api-server
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/api/v2/version"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    <<: *airflow-common

  airflow-dag-processor:
    container_name: airflow-dag-processor
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    command: dag-processor
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'airflow jobs check --job-type DagProcessorJob --hostname
            "$${HOSTNAME}"'
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    <<: *airflow-common

  airflow-init:
    container_name: airflow-init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
    env_file:
      - .env
    command: version
    <<: *airflow-common

  airflow-log-groomer:
    container_name: airflow-log-groomer
    environment:
      <<: *airflow-common-env
    command:
      - bash
      - /clean-logs
    <<: *airflow-common

  airflow-scheduler:
    container_name: airflow-scheduler
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    command: scheduler
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    <<: *airflow-common

  airflow-triggerer:
    container_name: airflow-triggerer
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    command: triggerer
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'airflow jobs check --job-type TriggererJob --hostname
            "$${HOSTNAME}"'
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    <<: *airflow-common
  postgres:
    image: postgres:latest
    container_name: airflow-postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:latest
    container_name: airflow-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s

volumes:
  postgres-db-volume:
  airflow-config:
